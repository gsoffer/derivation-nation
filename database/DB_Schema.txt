Derivation Nation Tables:Note: UNIQUE fields are automatically indexed, as are PRIMARY KEY.CREATE TABLE Derivation_Nation.users (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,group_id INT UNSIGNED NOT NULL DEFAULT 1,username VARCHAR(40) NOT NULL UNIQUE,password CHAR(60) NOT NULL,remember_token VARCHAR(100) DEFAULT NULL,email VARCHAR(100) NOT NULL UNIQUE,firstname  VARCHAR(40) DEFAULT NULL,lastname  VARCHAR(40) DEFAULT NULL,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE TABLE Derivation_Nation.groups (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,name VARCHAR(40) NOT NULL UNIQUE,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE TABLE Derivation_Nation.mathproofs (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,slug_id VARCHAR(505) NOT NULL UNIQUE,user_id INT UNSIGNED NOT NULL,username VARCHAR(40) NOT NULL,theorem_words VARCHAR(500) NOT NULL,theorem_symbolic VARCHAR(500) DEFAULT NULL,branches VARCHAR(100) NOT NULL,proof TEXT NOT NULL,flagged_accurate INT UNSIGNED DEFAULT 0, created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE INDEX user_id_idx ON Derivation_Nation.mathproofs (user_id);CREATE TABLE Derivation_Nation.accurateflags (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,mathproof_id INT UNSIGNED NOT NULL,user_id INT UNSIGNED NOT NULL,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE INDEX proof_id_idx ON Derivation_Nation.accurateflags (mathproof_id);CREATE INDEX user_id_idx ON Derivation_Nation.accurateflags (user_id);CREATE TABLE Derivation_Nation.comments (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,mathproof_id INT UNSIGNED NOT NULL,user_id INT UNSIGNED NOT NULL,username VARCHAR(40) NOT NULL,comment TEXT NOT NULL,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE INDEX proof_id_idx ON Derivation_Nation.comments (mathproof_id);CREATE INDEX user_id_idx ON Derivation_Nation.comments (user_id);CREATE TABLE Derivation_Nation.existingwords (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,word VARCHAR(100) NOT NULL UNIQUE,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE TABLE Derivation_Nation.existingword_mathproofs (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,existingword_id  INT UNSIGNED NOT NULL,mathproof_id INT UNSIGNED NOT NULL,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL);CREATE INDEX word_id_idx ON Derivation_Nation.existingword_mathproofs (existingword_id);CREATE UNIQUE INDEX wordproof_idx ON Derivation_Nation.existingword_mathproofs (existingword_id, mathproof_id);CREATE TABLE Derivation_Nation.password_resets (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,email VARCHAR(100) NOT NULL,token VARCHAR(100) NOT NULL,created_at DATETIME NOT NULL,KEY password_resets_email_index (email),KEY password_resets_token_index (token));CREATE TABLE Derivation_Nation.registration_confirmations (id INT UNSIGNED NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,email VARCHAR(100) NOT NULL,confirmation_code CHAR(40) NOT NULL,created_at DATETIME NOT NULL,updated_at DATETIME NOT NULL,KEY confirmations_email_index (email),KEY confirmations_token_index (confirmation_code));To drop all tables:drop table Derivation_Nation.users;drop table Derivation_Nation.groups;drop table Derivation_Nation.mathproofs;drop table Derivation_Nation.accurateflags;drop table Derivation_Nation.comments;drop table Derivation_Nation.existingwords;drop table Derivation_Nation.existingword_mathproofs;drop table Derivation_Nation.password_resets;drop table Derivation_Nation.registration_confirmations;